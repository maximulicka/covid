{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/LineChart.jsx","components/Chart/BarChart.jsx","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","components/Chart/Chart.module.css","App.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","varian","URL","fetchData","country","a","dataURL","axios","get","LineChart","chartData","labels","map","day","reportDate","datasets","total","label","borderColor","fill","backgroundColor","BarChart","options","legend","display","title","text","Chart","useState","setChartData","useEffect","then","res","CountryPicker","onCountryChange","countries","setCountries","error","FormControl","formControl","NativeSelect","selected","onChange","e","target","handleCountryChange","key","iso3","name","App","setData","setCountry","fetchAPI","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.32dce851.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","import React from \"react\";\nimport styles from \"./Cards.module.css\";\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\nimport CountUp from \"react-countup\";\nimport cx from \"classnames\";\n\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\n  if (!confirmed) {\n    return \"Loading\";\n  }\n  return (\n    <div className={styles.container}>\n      <Grid container spacing={3} justify=\"center\">\n        <Grid\n          item\n          component={Card}\n          xs={12}\n          md={3}\n          className={cx(styles.card, styles.infected)}\n        >\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Infected\n            </Typography>\n            <Typography variant=\"h5\">\n              <CountUp\n                start={0}\n                end={confirmed.value}\n                duration={1.5}\n                separator=\",\"\n              />\n            </Typography>\n            <Typography color=\"textSecondary\" gutterBottom>\n              {new Date(lastUpdate).toDateString()}\n            </Typography>\n            <Typography varian=\"body2\">Number of active cases</Typography>\n          </CardContent>\n        </Grid>\n\n        <Grid\n          item\n          component={Card}\n          xs={12}\n          md={3}\n          className={cx(styles.card, styles.recovered)}\n        >\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Recovered\n            </Typography>\n            <Typography variant=\"h5\">\n              <CountUp\n                start={0}\n                end={recovered.value}\n                duration={1.5}\n                separator=\",\"\n              />\n            </Typography>\n            <Typography color=\"textSecondary\" gutterBottom>\n              {new Date(lastUpdate).toDateString()}\n            </Typography>\n            <Typography varian=\"body2\">Number of recoveries</Typography>\n          </CardContent>\n        </Grid>\n\n        <Grid\n          item\n          component={Card}\n          xs={12}\n          md={3}\n          className={cx(styles.card, styles.deaths)}\n        >\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Deaths\n            </Typography>\n            <Typography variant=\"h5\">\n              <CountUp\n                start={0}\n                end={deaths.value}\n                duration={1.5}\n                separator=\",\"\n              />\n            </Typography>\n            <Typography color=\"textSecondary\" gutterBottom>\n              {new Date(lastUpdate).toDateString()}\n            </Typography>\n            <Typography varian=\"body2\">Number of death cases</Typography>\n          </CardContent>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Cards;\n","import axios from \"axios\";\n\nconst URL = \"https://covid19.mathdro.id/api\";\n\nconst fetchData = async (country) => {\n  let dataURL = URL;\n  if (country) {\n    dataURL += `/countries/${country}`;\n  }\n\n  try {\n    const {\n      data: { confirmed, recovered, deaths, lastUpdate },\n    } = await axios.get(dataURL);\n    return { confirmed, recovered, deaths, lastUpdate };\n  } catch (error) {\n    return error;\n  }\n};\n\nexport { URL, fetchData };\n","import React from \"react\";\nimport { Line } from \"react-chartjs-2\";\n\nconst LineChart = ({ chartData }) => {\n  return (\n    <Line\n      data={{\n        labels: chartData.map((day) => day.reportDate),\n        datasets: [\n          {\n            data: chartData.map((day) => day.confirmed.total),\n            label: \"Infected\",\n            borderColor: \"#3333ff\",\n            fill: true,\n          },\n          {\n            data: chartData.map((day) => day.deaths.total),\n            label: \"Deaths\",\n            borderColor: \"red\",\n            backgroundColor: \"rgba(255, 0, 0, .5)\",\n            fill: true,\n          },\n        ],\n      }}\n    ></Line>\n  );\n};\n\nexport default LineChart;\n","import React from \"react\";\nimport { Bar } from \"react-chartjs-2\";\n\nconst BarChart = ({ chartData }) => {\n  return (\n    <Bar\n      data={{\n        labels: [\"Infected\", \"Recovered\", \"Deaths\"],\n        datasets: [\n          {\n            label: \"People\",\n            backgroundColor: [\n              \"rgba(0, 0, 255, 0.5)\",\n              \"rgba(0, 255, 0, 0.5)\",\n              \"rgba(255, 0, 0, 0.5)\",\n            ],\n            data: [\n              chartData.confirmed.value,\n              chartData.recovered.value,\n              chartData.deaths.value,\n            ],\n          },\n        ],\n      }}\n      options={{\n        legend: { display: false },\n        title: { display: true, text: `Current state in ` },\n      }}\n    ></Bar>\n  );\n};\n\nexport default BarChart;\n","import React, { useState, useEffect } from \"react\";\nimport { URL } from \"../../api/\";\nimport axios from \"axios\";\nimport LineChart from \"./LineChart\";\nimport BarChart from \"./BarChart\";\nimport styles from \"./Chart.module.css\";\n\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\n  const [chartData, setChartData] = useState([]);\n\n  useEffect(() => {\n    axios.get(URL + \"/daily\").then((res) => setChartData(res.data));\n  }, []);\n\n  return (\n    <div className={styles.container}>\n      {country !== \"\" && confirmed ? (\n        <BarChart chartData={{ confirmed, recovered, deaths }} />\n      ) : (\n        <LineChart chartData={chartData} />\n      )}\n    </div>\n  );\n};\n\nexport default Chart;\n","import React, { useEffect, useState } from \"react\";\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\nimport styles from \"./CountryPicker.module.css\";\nimport axios from \"axios\";\nimport { URL } from \"../../api\";\n\nconst CountryPicker = ({ country, onCountryChange }) => {\n  const [countries, setCountries] = useState([]);\n\n  useEffect(() => {\n    try {\n      axios.get(`${URL}/countries`).then((res) => {\n        setCountries(res.data.countries);\n      });\n    } catch (error) {}\n  }, []);\n\n  const handleCountryChange = (e) => {\n    onCountryChange(e.target.value);\n  };\n\n  return (\n    <FormControl className={styles.formControl}>\n      <NativeSelect selected={country} onChange={(e) => handleCountryChange(e)}>\n        <option value=\"\">Global</option>\n        {countries.map((country) => {\n          return (\n            <option key={country.iso3 + country.name} value={country.iso3}>\n              {country.name}\n            </option>\n          );\n        })}\n      </NativeSelect>\n    </FormControl>\n  );\n};\n\nexport default CountryPicker;\n","import React, { useEffect, useState } from \"react\";\nimport { Cards, Chart, CountryPicker } from \"./components\";\nimport styles from \"./App.module.css\";\nimport { fetchData } from \"./api\";\n\nconst App = () => {\n  const [data, setData] = useState({});\n  const [country, setCountry] = useState(\"global\");\n\n  // Side effect to load info for cards!!!\n  useEffect(() => {\n    const fetchAPI = async () => {\n      const data = await fetchData();\n      setData(data);\n    };\n    fetchAPI();\n  }, []);\n\n  //   Country change handler loads particular country info & sets country as active\n  const onCountryChange = async (country) => {\n    const data = await fetchData(country);\n    setData(data);\n    setCountry(country);\n  };\n\n  return (\n    <div className={styles.container}>\n      <Cards data={data} />\n      <CountryPicker country={country} onCountryChange={onCountryChange} />\n      <Chart data={data} country={country} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\"};"],"sourceRoot":""}